
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I’m a University student of SIST in ShanghaiTech University. My research interests include Artificial Intelligence, Deep Learning, Computer Vision and LLMs. I have independently finished two small projects for CASTIC, Tencent Rhinobird High School Scientific Training Program and Intel ISEF from high school. I’m currently working for a lab under VRVC, a branch of ShanghaiTech Visual and Data Intelligence Center.\n","date":1700265600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1700265600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I’m a University student of SIST in ShanghaiTech University. My research interests include Artificial Intelligence, Deep Learning, Computer Vision and LLMs. I have independently finished two small projects for CASTIC, Tencent Rhinobird High School Scientific Training Program and Intel ISEF from high school.","tags":null,"title":"Jiashen Du","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Hugo Blox Builder’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://alt-js.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Hugo Blox Builder's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Part1: Background \u0026amp; Overview The goal of this assignment is to take the digitized Prokudin-Gorskii glass plate images and, using image processing techniques, automatically produce a color image with as few visual artifacts as possible. First, I cropped the pictures into three parts, and treat them as blue channel, green channel and red channel. Then, the vanilla method is just to stack the three channels together, as shown below.\nPicture Selected: Cathedral\nThe easiest attempt clearly has two drawbacks. One is that the three channels of pictures don’t crop quite well, resulting in the huge colored bands on the edge of the stacked picture. The other is that the three channels of pictures don’t align quite well, resulting in the blur and gleming of the stacked picture.\nPart2: Simple Image Alignment The easiest way to align the parts is to exhaustively search over a window of possible displacements (say [-15,15] pixels), score each one using some image matching metric, and take the displacement with the best score. I choose the easier way of calculating L2 norm:\n# L2_norm calculation def L2_norm(image1, image2): return np.sqrt(np.sum((image1 - image2) ** 2)) Using dual for loop, the simple attempt can exhaustively search over a window of possible displacements, compare L2 norm values 256 times, and apply the displacement with the smallest L2 norm, indicating the best alignment. With the simple alignment method, I am able to reconstruct low-res pictures like the cathedral well. The “Best matching displacement(Using blue channel as base image)” applies to all results shown below.\nFor green channel: move -1 on x-axis, move 1 on y-axis.\nFor red channel: move -1 on x-axis, move 7 on y-axis.\nStacked w/o simple alignment\rStacked w/ simple alignment\rAlso, I noticed that the picture has black edges that only bear unnecessary informations and can cause poor results in the simple alignment method. So I revised the simple alignment method by adding one more step of cropping the black edges. With the preprocessing cropping used, the simple alignment algorithm can achieve fine results on other low-res pictures like the monastery and the tobolsk.\nFor green channel: move 2 on x-axis, move -3 on y-axis.\nFor red channel: move 2 on x-axis, move 3 on y-axis.\nStacked w/ cropping w/o simple alignment\rStacked w/ simple alignment\rFor green channel: move 2 on x-axis, move 3 on y-axis.\nFor red channel: move 3 on x-axis, move 6 on y-axis.\nStacked w/ cropping w/o simple alignment\rStacked w/ simple alignment\rPart3: Image alignment using image pyramid Exhaustive search will become prohibitively expensive if the pixel displacement is too large (which will be the case for high-resolution glass plate scans). In this case, we can implement a faster search procedure such as an image pyramid. An image pyramid represents the image at multiple scales (usually scaled by a factor of 2) and the processing is done sequentially starting from the coarsest scale (smallest image) and going down the pyramid, updating your estimate as you go. It is very easy to implement by adding recursive calls to your original single-scale implementation.\nMy recursive part of the image pyramid consists of two major parts: when level reaches zero, it will call the original simple alignment function, otherwise, it will resize the images to half of its width and height and recursively call itself. In each call we can get a coarse displacement, accompanied by the fined displacement result derived at its level, we will get a correct result at the final output. Using the image pyramid, I am able to get nice results of icon and harvesters.\nYou can click on the image to see a bigger picture for hi-res results.\nFor green channel: move 17 on x-axis, move 40 on y-axis.\nFor red channel: move 23 on x-axis, move 89 on y-axis.\nFor green channel: move 15 on x-axis, move 58 on y-axis.\nFor red channel: move 13 on x-axis, move 120 on y-axis.\nI thought the image pyramid alignment performs not that bad until I get the result of Emir:\nFor green channel: move 24 on x-axis, move 49 on y-axis.\nFor red channel: move 32 on x-axis, move 0 on y-axis.\nAfter checking the original channel-splitted picture of emir, I discovered that the exposure and the brightness level of three channels vary dramatically, which can lead to a bad result demonstrated above.\nHow to solve it?\nPart4: Bells \u0026amp; Whistles: a try on canny After examining the emir’s picture, I discovered that Emir’s burka bears lots of stripes and treads on it. And the stripes are so clear and sharp that under uneven exposure and brightness level they can be distinguished easily. So edge detection techique may achieve unbelievably good results.\nAfter channel-split, I ran canny edge detection on three pictures and get the following result:\nEmir canny blue channel Emir canny green channel Emir canny red channel By feeding canny-processed pictures into the previous image pyramid algorithm, Emir’s color image is sharp and the skin tone is also right. …","date":1725321600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1725321600,"objectID":"a714bd86c09a4214ac649050c3f7bd09","permalink":"https://alt-js.github.io/post/compsci180_project1/","publishdate":"2024-09-03T00:00:00Z","relpermalink":"/post/compsci180_project1/","section":"post","summary":"Part1: Background \u0026 Overview The goal of this assignment is to take the digitized Prokudin-Gorskii glass plate images and, using image processing techniques, automatically produce a color image with as few visual artifacts as possible.","tags":null,"title":"COMPSCI 180 Project1","type":"post"},{"authors":["Chengfeng Zhao","Juze Zhang","Jiashen Du","Ziwei Shan","Junye Wang","Jingyi Yu","Jingya Wang","Lan Xu"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1700265600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1700265600,"objectID":"db766a39b922ffd6abc3784535eeb951","permalink":"https://alt-js.github.io/publication/conference-paper/imhoi/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/imhoi/","section":"publication","summary":"In this paper, we present I'm-HOI, a monocular scheme to faithfully capture the 3D motions of both the human and object in a novel setting, using a minimal amount of RGB camera and object-mounted Inertial Measurement Unit (IMU).","tags":[],"title":"I’M HOI: Inertia-aware Monocular Capture of 3D Human-Object Interactions","type":"publication"},{"authors":null,"categories":null,"content":"","date":1603756800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603756800,"objectID":"0b9687d5837bd2714f6b1f0da637348d","permalink":"https://alt-js.github.io/project/mobilenetv3/","publishdate":"2020-10-27T00:00:00Z","relpermalink":"/project/mobilenetv3/","section":"project","summary":"My small project that took part in Tencent Rhinobird High School Scientific Training Program in high school, uses light-weight neural network backbone, MobileNetV3 to detect fire, targeting for applications in portable devices and edge computing.","tags":null,"title":"A light-weight self-accomodate fire detection system","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Hugo Blox Builder Hugo Blox Builder | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://alt-js.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Hugo Blox Builder's Slides feature.","tags":[],"title":"Slides","type":"slides"}]